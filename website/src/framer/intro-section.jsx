// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 6ea1ba37e05fac32 "Fumabase website, made from Aset", do not edit manually */
'use client'

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Tablet' | 'Phone' // Variant
}} Props

 */
import { className, css, fonts } from './chunks/chunk-YL4V4VZK.js'
import { stdin_default } from './chunks/chunk-EHCTMXQN.js'
import { routes } from './chunks/chunk-75FLX355.js'

// virtual:intro-section
import { Fragment as Fragment3 } from 'react'
import { ContextProviders } from 'unframer'

// /:https://framerusercontent.com/modules/hfOdlGq2io0nshwQb2T8/S5oKYwXdyNTQcrSe31NN/FBnWH0oiT.js
import { jsx as _jsx3, jsxs as _jsxs3 } from 'react/jsx-runtime'
import {
  addFonts as addFonts2,
  addPropertyControls as addPropertyControls3,
  ComponentViewportProvider,
  ControlType as ControlType3,
  cx as cx2,
  getFonts,
  getFontsFromSharedStyle,
  RichText,
  SmartComponentScopedContainer,
  SVG,
  useComponentViewport as useComponentViewport2,
  useLocaleInfo as useLocaleInfo2,
  useVariantState as useVariantState2,
  withCSS as withCSS2,
  withFX,
  withOptimizedAppearEffect,
} from 'unframer'
import { LayoutGroup as LayoutGroup3, motion as motion3, MotionConfigContext as MotionConfigContext2 } from 'unframer'
import * as React2 from 'react'
import { useRef as useRef3 } from 'react'

// /:https://framerusercontent.com/modules/B2xAlJLcN0gOnt11mSPw/jyRNgY7vYWXe6t31T0wo/Ticker.js
import { jsx as _jsx, jsxs as _jsxs } from 'react/jsx-runtime'
import { Children, useLayoutEffect, useEffect, useState, useRef, useMemo, useCallback, cloneElement } from 'react'
import { addPropertyControls, ControlType, RenderTarget } from 'unframer'
import { useReducedMotion, LayoutGroup, useInView, useMotionValue, useTransform, motion, frame } from 'unframer'
import { resize } from '@motionone/dom'
var MAX_DUPLICATED_ITEMS = 100
var directionTransformers = {
  left: (offset) => `translateX(-${offset}px)`,
  right: (offset) => `translateX(${offset}px)`,
  top: (offset) => `translateY(-${offset}px)`,
  bottom: (offset) => `translateY(${offset}px)`,
}
function Ticker(props) {
  let {
    slots = [],
    gap,
    padding,
    paddingPerSide,
    paddingTop,
    paddingRight,
    paddingBottom,
    paddingLeft,
    speed,
    hoverFactor,
    direction,
    alignment,
    sizingOptions,
    fadeOptions,
    style,
  } = props
  const { fadeContent, overflow, fadeWidth, fadeInset, fadeAlpha } = fadeOptions
  const { widthType, heightType } = sizingOptions
  const paddingValue = paddingPerSide
    ? `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`
    : `${padding}px`
  const currentTarget = RenderTarget.current()
  const isCanvas = currentTarget === RenderTarget.canvas || currentTarget === RenderTarget.export
  const filteredSlots = slots.filter(Boolean)
  const numChildren = Children.count(filteredSlots)
  const hasChildren = numChildren > 0
  if (direction === true) {
    direction = 'left'
  }
  const isHorizontal = direction === 'left' || direction === 'right'
  const offset = useMotionValue(0)
  const transformer = directionTransformers[direction]
  const transform = useTransform(offset, transformer)
  const parentRef = useRef(null)
  const childrenRef = useMemo(() => {
    return [
      {
        current: null,
      },
      {
        current: null,
      },
    ]
  }, [])
  const [size, setSize] = useState({
    parent: null,
    children: null,
  })
  let clonedChildren = null
  let dupedChildren = []
  let duplicateBy = 0
  let opacity = 0
  if (isCanvas) {
    duplicateBy = numChildren ? Math.floor(10 / numChildren) : 0
    opacity = 1
  }
  if (!isCanvas && hasChildren && size.parent) {
    duplicateBy = Math.round((size.parent / size.children) * 2) + 1
    duplicateBy = Math.min(duplicateBy, MAX_DUPLICATED_ITEMS)
    opacity = 1
  }
  const measure = useCallback(() => {
    if (hasChildren && parentRef.current) {
      const parentLength = isHorizontal ? parentRef.current.offsetWidth : parentRef.current.offsetHeight
      const start = childrenRef[0].current
        ? isHorizontal
          ? childrenRef[0].current.offsetLeft
          : childrenRef[0].current.offsetTop
        : 0
      const end = childrenRef[1].current
        ? isHorizontal
          ? childrenRef[1].current.offsetLeft + childrenRef[1].current.offsetWidth
          : childrenRef[1].current.offsetTop + childrenRef[1].current.offsetHeight
        : 0
      const childrenLength = end - start + gap
      setSize({
        parent: parentLength,
        children: childrenLength,
      })
    }
  }, [])
  const childrenStyles = isCanvas
    ? {
        contentVisibility: 'auto',
      }
    : {}
  if (hasChildren) {
    if (!isCanvas) {
      let initialResize = useRef(true)
      useLayoutEffect(() => {
        frame.read(measure, false, true)
        return resize(parentRef.current, ({ contentSize }) => {
          if (!initialResize.current && (contentSize.width || contentSize.height)) {
            frame.read(measure, false, true)
          }
          initialResize.current = false
        })
      }, [])
    }
    clonedChildren = Children.map(filteredSlots, (child, index) => {
      let ref
      if (index === 0) {
        ref = childrenRef[0]
      }
      if (index === filteredSlots.length - 1) {
        ref = childrenRef[1]
      }
      const size2 = {
        width: widthType ? child.props?.width : '100%',
        height: heightType ? child.props?.height : '100%',
      }
      return (
        <LayoutGroup inherit={'id'}>
          <li ref={ref} style={size2}>
            {
              /* @__PURE__ */ cloneElement(
                child,
                {
                  style: {
                    ...child.props?.style,
                    ...size2,
                    flexShrink: 0,
                    ...childrenStyles,
                  },
                  layoutId: child.props.layoutId ? child.props.layoutId + '-original-' + index : void 0,
                },
                child.props?.children,
              )
            }
          </li>
        </LayoutGroup>
      )
    })
  }
  const isInView = isCanvas ? true : useInView(parentRef)
  if (!isCanvas) {
    for (let i = 0; i < duplicateBy; i++) {
      dupedChildren = dupedChildren.concat(
        Children.map(filteredSlots, (child, childIndex) => {
          const size2 = {
            width: widthType ? child.props?.width : '100%',
            height: heightType ? child.props?.height : '100%',
            willChange: !isInView ? void 0 : 'transform',
          }
          return (
            <LayoutGroup inherit={'id'}>
              <li style={size2} aria-hidden={true}>
                {
                  /* @__PURE__ */ cloneElement(
                    child,
                    {
                      key: i + ' ' + childIndex,
                      style: {
                        ...child.props?.style,
                        width: widthType ? child.props?.width : '100%',
                        height: heightType ? child.props?.height : '100%',
                        flexShrink: 0,
                        ...childrenStyles,
                      },
                      layoutId: child.props.layoutId ? child.props.layoutId + '-dupe-' + i : void 0,
                    },
                    child.props?.children,
                  )
                }
              </li>
            </LayoutGroup>
          )
        }),
      )
    }
  }
  const animateToValue = size.children + size.children * Math.round(size.parent / size.children)
  const initialTime = useRef(null)
  const prevTime = useRef(null)
  const xOrY = useRef(0)
  const isHover = useRef(false)
  const isReducedMotion = useReducedMotion()
  const listRef = useRef(null)
  const animationRef = useRef(null)
  if (!isCanvas) {
    useEffect(() => {
      if (isReducedMotion || !animateToValue || !speed) {
        return
      }
      animationRef.current = listRef.current.animate(
        {
          transform: [transformer(0), transformer(animateToValue)],
        },
        {
          duration: (Math.abs(animateToValue) / speed) * 1e3,
          iterations: Infinity,
          easing: 'linear',
        },
      )
      return () => animationRef.current.cancel()
    }, [hoverFactor, animateToValue, speed])
    const playOrPause = useCallback(() => {
      if (!animationRef.current) return
      const hidden = document.hidden
      if (isInView && !hidden && animationRef.current.playState === 'paused') {
        animationRef.current.play()
      } else if ((!isInView || hidden) && animationRef.current.playState === 'running') {
        animationRef.current.pause()
      }
    }, [isInView])
    useEffect(() => {
      playOrPause()
    }, [isInView, hoverFactor, animateToValue, speed])
    useEffect(() => {
      document.addEventListener('visibilitychange', playOrPause)
      return () => {
        document.removeEventListener('visibilitychange', playOrPause)
      }
    }, [playOrPause])
  }
  const fadeDirection = isHorizontal ? 'to right' : 'to bottom'
  const fadeWidthStart = fadeWidth / 2
  const fadeWidthEnd = 100 - fadeWidth / 2
  const fadeInsetStart = clamp(fadeInset, 0, fadeWidthStart)
  const fadeInsetEnd = 100 - fadeInset
  const fadeMask = `linear-gradient(${fadeDirection}, rgba(0, 0, 0, ${fadeAlpha}) ${fadeInsetStart}%, rgba(0, 0, 0, 1) ${fadeWidthStart}%, rgba(0, 0, 0, 1) ${fadeWidthEnd}%, rgba(0, 0, 0, ${fadeAlpha}) ${fadeInsetEnd}%)`
  if (!hasChildren) {
    return (
      <section style={placeholderStyles}>
        <div style={emojiStyles}>{'\u2728'}</div>
        <p style={titleStyles}>{'Connect to Content'}</p>
        <p style={subtitleStyles}>{'Add layers or components to infinitely loop on your page.'}</p>
      </section>
    )
  }
  return (
    <section
      style={{
        ...containerStyle,
        opacity,
        WebkitMaskImage: fadeContent ? fadeMask : void 0,
        maskImage: fadeContent ? fadeMask : void 0,
        overflow: overflow ? 'visible' : 'hidden',
        padding: paddingValue,
      }}
      ref={parentRef}
    >
      <motion.ul
        ref={listRef}
        style={{
          ...containerStyle,
          gap,
          top: direction === 'bottom' && isValidNumber(animateToValue) ? -animateToValue : void 0,
          left: direction === 'right' && isValidNumber(animateToValue) ? -animateToValue : void 0,
          placeItems: alignment,
          position: 'relative',
          flexDirection: isHorizontal ? 'row' : 'column',
          ...style,
          willChange: isCanvas || !isInView ? 'auto' : 'transform',
          transform: transformer(0),
        }}
        onMouseEnter={() => {
          isHover.current = true
          if (animationRef.current) {
            animationRef.current.playbackRate = hoverFactor
          }
        }}
        onMouseLeave={() => {
          isHover.current = false
          if (animationRef.current) {
            animationRef.current.playbackRate = 1
          }
        }}
      >
        {clonedChildren}
        {dupedChildren}
      </motion.ul>
    </section>
  )
}
Ticker.defaultProps = {
  gap: 10,
  padding: 10,
  sizingOptions: {
    widthType: true,
    heightType: true,
  },
  fadeOptions: {
    fadeContent: true,
    overflow: false,
    fadeWidth: 25,
    fadeAlpha: 0,
    fadeInset: 0,
  },
  direction: true,
}
addPropertyControls(Ticker, {
  slots: {
    type: ControlType.Array,
    title: 'Children',
    control: {
      type: ControlType.ComponentInstance,
    },
  },
  speed: {
    type: ControlType.Number,
    title: 'Speed',
    min: 0,
    max: 1e3,
    defaultValue: 100,
    unit: '%',
    displayStepper: true,
    step: 5,
  },
  direction: {
    type: ControlType.Enum,
    title: 'Direction',
    options: ['left', 'right', 'top', 'bottom'],
    optionIcons: ['direction-left', 'direction-right', 'direction-up', 'direction-down'],
    optionTitles: ['Left', 'Right', 'Top', 'Bottom'],
    defaultValue: 'left',
    displaySegmentedControl: true,
  },
  alignment: {
    type: ControlType.Enum,
    title: 'Align',
    options: ['flex-start', 'center', 'flex-end'],
    optionIcons: {
      direction: {
        right: ['align-top', 'align-middle', 'align-bottom'],
        left: ['align-top', 'align-middle', 'align-bottom'],
        top: ['align-left', 'align-center', 'align-right'],
        bottom: ['align-left', 'align-center', 'align-right'],
      },
    },
    defaultValue: 'center',
    displaySegmentedControl: true,
  },
  gap: {
    type: ControlType.Number,
    title: 'Gap',
  },
  padding: {
    title: 'Padding',
    type: ControlType.FusedNumber,
    toggleKey: 'paddingPerSide',
    toggleTitles: ['Padding', 'Padding per side'],
    valueKeys: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],
    valueLabels: ['T', 'R', 'B', 'L'],
    min: 0,
  },
  sizingOptions: {
    type: ControlType.Object,
    title: 'Sizing',
    controls: {
      widthType: {
        type: ControlType.Boolean,
        title: 'Width',
        enabledTitle: 'Auto',
        disabledTitle: 'Stretch',
        defaultValue: true,
      },
      heightType: {
        type: ControlType.Boolean,
        title: 'Height',
        enabledTitle: 'Auto',
        disabledTitle: 'Stretch',
        defaultValue: true,
      },
    },
  },
  fadeOptions: {
    type: ControlType.Object,
    title: 'Clipping',
    controls: {
      fadeContent: {
        type: ControlType.Boolean,
        title: 'Fade',
        defaultValue: true,
      },
      overflow: {
        type: ControlType.Boolean,
        title: 'Overflow',
        enabledTitle: 'Show',
        disabledTitle: 'Hide',
        defaultValue: false,
        hidden(props) {
          return props.fadeContent === true
        },
      },
      fadeWidth: {
        type: ControlType.Number,
        title: 'Width',
        defaultValue: 25,
        min: 0,
        max: 100,
        unit: '%',
        hidden(props) {
          return props.fadeContent === false
        },
      },
      fadeInset: {
        type: ControlType.Number,
        title: 'Inset',
        defaultValue: 0,
        min: 0,
        max: 100,
        unit: '%',
        hidden(props) {
          return props.fadeContent === false
        },
      },
      fadeAlpha: {
        type: ControlType.Number,
        title: 'Opacity',
        defaultValue: 0,
        min: 0,
        max: 1,
        step: 0.05,
        hidden(props) {
          return props.fadeContent === false
        },
      },
    },
  },
  hoverFactor: {
    type: ControlType.Number,
    title: 'Hover',
    min: 0,
    max: 1,
    unit: 'x',
    defaultValue: 1,
    step: 0.1,
    displayStepper: true,
    description: 'Slows down the speed while you are hovering.',
  },
})
var containerStyle = {
  display: 'flex',
  width: '100%',
  height: '100%',
  maxWidth: '100%',
  maxHeight: '100%',
  placeItems: 'center',
  margin: 0,
  padding: 0,
  listStyleType: 'none',
  textIndent: 'none',
}
var placeholderStyles = {
  display: 'flex',
  width: '100%',
  height: '100%',
  placeContent: 'center',
  placeItems: 'center',
  flexDirection: 'column',
  color: '#96F',
  background: 'rgba(136, 85, 255, 0.1)',
  fontSize: 11,
  overflow: 'hidden',
  padding: '20px 20px 30px 20px',
}
var emojiStyles = {
  fontSize: 32,
  marginBottom: 10,
}
var titleStyles = {
  margin: 0,
  marginBottom: 10,
  fontWeight: 600,
  textAlign: 'center',
}
var subtitleStyles = {
  margin: 0,
  opacity: 0.7,
  maxWidth: 150,
  lineHeight: 1.5,
  textAlign: 'center',
}
var clamp = (num, min, max) => Math.min(Math.max(num, min), max)
var isValidNumber = (value) => typeof value === 'number' && !isNaN(value)

// /:https://framerusercontent.com/modules/BtlTeU8NtCTf9iNlAmKJ/FOeJarqf7zD1iPyQe6s1/R1povJs9j.js
import { jsx as _jsx2, jsxs as _jsxs2 } from 'react/jsx-runtime'
import {
  addFonts,
  addPropertyControls as addPropertyControls2,
  ControlType as ControlType2,
  cx,
  getLoadingLazyAtYPosition,
  Image,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from 'unframer'
import { LayoutGroup as LayoutGroup2, motion as motion2, MotionConfigContext } from 'unframer'
import * as React from 'react'
import { useRef as useRef2 } from 'react'
var serializationHash = 'framer-RfvCw'
var variantClassNames = {
  DWuvPuAyu: 'framer-v-9ys8z4',
}
var transition1 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: 'spring',
}
var toResponsiveImage = (value) => {
  if (typeof value === 'object' && value !== null && typeof value.src === 'string') {
    return value
  }
  return typeof value === 'string'
    ? {
        src: value,
      }
    : void 0
}
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext)
  const transition = value ?? config.transition
  const contextValue = React.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)],
  )
  return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}
var Variants = motion2.create(React.Fragment)
var getProps = ({ height, id, image, width, ...props }) => {
  return {
    ...props,
    dqmLn4hHN: image ??
      props.dqmLn4hHN ?? {
        pixelHeight: 432,
        pixelWidth: 768,
        src: 'https://framerusercontent.com/images/DOwqDly49D9Nxub0ecMLI4waA.png?scale-down-to=512',
        srcSet:
          'https://framerusercontent.com/images/DOwqDly49D9Nxub0ecMLI4waA.png?scale-down-to=512 512w,https://framerusercontent.com/images/DOwqDly49D9Nxub0ecMLI4waA.png 768w',
      },
  }
}
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency
  return variants.join('-')
}
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef2(null)
  const refBinding = ref ?? fallbackRef
  const defaultLayoutId = React.useId()
  const { activeLocale, setLocale } = useLocaleInfo()
  const componentViewport = useComponentViewport()
  const { style, className: className2, layoutId, variant, dqmLn4hHN, ...restProps } = getProps(props)
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    defaultVariant: 'DWuvPuAyu',
    ref: refBinding,
    variant,
    variantClassNames,
  })
  const layoutDependency = createLayoutDependency(props, variants)
  const sharedStyleClassNames = []
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)
  return (
    <LayoutGroup2 id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition1}>
          <motion2.div
            {...restProps}
            {...gestureHandlers}
            className={cx(scopingClassNames, 'framer-9ys8z4', className2, classNames)}
            data-border={true}
            data-framer-name={'Variant 1'}
            layoutDependency={layoutDependency}
            layoutId={'DWuvPuAyu'}
            ref={refBinding}
            style={{
              '--border-bottom-width': '1.5px',
              '--border-color': 'rgb(242, 242, 242)',
              '--border-left-width': '1.5px',
              '--border-right-width': '1.5px',
              '--border-style': 'solid',
              '--border-top-width': '1.5px',
              backgroundColor: 'rgb(250, 250, 250)',
              borderBottomLeftRadius: 10,
              borderBottomRightRadius: 10,
              borderTopLeftRadius: 10,
              borderTopRightRadius: 10,
              boxShadow: 'inset 0px 3px 0px 0px rgb(255, 255, 255)',
              ...style,
            }}
          >
            <motion2.div
              className={'framer-n9i3aa'}
              data-framer-name={'Ellipse 1'}
              layoutDependency={layoutDependency}
              layoutId={'mMNsLf995'}
              style={{
                backgroundColor: 'rgb(230, 230, 230)',
                borderBottomLeftRadius: '100%',
                borderBottomRightRadius: '100%',
                borderTopLeftRadius: '100%',
                borderTopRightRadius: '100%',
                boxShadow: 'inset 0px 1px 1px 0px rgba(0, 0, 0, 0.1), inset 0px -0.5px 0px 0px rgb(255, 255, 255)',
              }}
            />
            <motion2.div
              className={'framer-1aamlzk'}
              data-framer-name={'Ellipse 3'}
              layoutDependency={layoutDependency}
              layoutId={'Q2nCFw9px'}
              style={{
                backgroundColor: 'rgb(230, 230, 230)',
                borderBottomLeftRadius: '100%',
                borderBottomRightRadius: '100%',
                borderTopLeftRadius: '100%',
                borderTopRightRadius: '100%',
                boxShadow: 'inset 0px 1px 1px 0px rgba(0, 0, 0, 0.1), inset 0px -0.5px 0px 0px rgb(255, 255, 255)',
              }}
            />
            <motion2.div
              className={'framer-1qw8dvl'}
              data-framer-name={'Ellipse 2'}
              layoutDependency={layoutDependency}
              layoutId={'Oa8uSRpjZ'}
              style={{
                backgroundColor: 'rgb(230, 230, 230)',
                borderBottomLeftRadius: '100%',
                borderBottomRightRadius: '100%',
                borderTopLeftRadius: '100%',
                borderTopRightRadius: '100%',
                boxShadow: 'inset 0px 1px 1px 0px rgba(0, 0, 0, 0.1), inset 0px -0.5px 0px 0px rgb(255, 255, 255)',
              }}
            />
            <motion2.div
              className={'framer-181v2m8'}
              data-framer-name={'Ellipse 4'}
              layoutDependency={layoutDependency}
              layoutId={'TLPrvjW46'}
              style={{
                backgroundColor: 'rgb(230, 230, 230)',
                borderBottomLeftRadius: '100%',
                borderBottomRightRadius: '100%',
                borderTopLeftRadius: '100%',
                borderTopRightRadius: '100%',
                boxShadow: 'inset 0px 1px 1px 0px rgba(0, 0, 0, 0.1), inset 0px -0.5px 0px 0px rgb(255, 255, 255)',
              }}
            />
            <motion2.div
              className={'framer-1upnwu0'}
              layoutDependency={layoutDependency}
              layoutId={'f79ovm1Ez'}
              style={{
                borderBottomLeftRadius: 5,
                borderBottomRightRadius: 5,
                borderTopLeftRadius: 5,
                borderTopRightRadius: 5,
                boxShadow: '0px 10px 16px -3px rgba(0, 0, 0, 0.25)',
              }}
            >
              <Image
                background={{
                  alt: '',
                  fit: 'fill',
                  loading: getLoadingLazyAtYPosition((componentViewport?.y || 0) + 10 + 0 + 0),
                  sizes: '343px',
                  ...toResponsiveImage(dqmLn4hHN),
                  ...{
                    positionX: 'center',
                    positionY: 'center',
                  },
                }}
                className={'framer-1rgthum'}
                data-framer-name={'image'}
                layoutDependency={layoutDependency}
                layoutId={'o4XjaZ9HW'}
                style={{
                  filter: 'drop-shadow(0px 10px 7px rgba(0, 0, 0, 0.25))',
                  WebkitFilter: 'drop-shadow(0px 10px 7px rgba(0, 0, 0, 0.25))',
                }}
              />
            </motion2.div>
          </motion2.div>
        </Transition>
      </Variants>
    </LayoutGroup2>
  )
})
var css2 = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-RfvCw.framer-1t6170q, .framer-RfvCw .framer-1t6170q { display: block; }',
  '.framer-RfvCw.framer-9ys8z4 { align-content: flex-start; align-items: flex-start; cursor: default; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 10px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }',
  '.framer-RfvCw .framer-n9i3aa { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 14px; position: absolute; top: 14px; width: 6px; z-index: 1; }',
  '.framer-RfvCw .framer-1aamlzk { aspect-ratio: 1 / 1; bottom: 14px; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 14px; position: absolute; width: 6px; z-index: 1; }',
  '.framer-RfvCw .framer-1qw8dvl { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); position: absolute; right: 14px; top: 14px; width: 6px; z-index: 1; }',
  '.framer-RfvCw .framer-181v2m8 { aspect-ratio: 1 / 1; bottom: 14px; flex: none; height: var(--framer-aspect-ratio-supported, 6px); position: absolute; right: 14px; width: 6px; z-index: 1; }',
  '.framer-RfvCw .framer-1upnwu0 { align-content: center; align-items: center; align-self: stretch; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 195px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: auto; will-change: var(--framer-will-change-override, transform); }',
  '.framer-RfvCw .framer-1rgthum { flex: none; gap: 10px; height: 100%; position: relative; width: 343px; z-index: 1; }',
  '.framer-RfvCw[data-border="true"]::after, .framer-RfvCw [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
]
var FramerR1povJs9j = withCSS(Component, css2, 'framer-RfvCw')
var stdin_default2 = FramerR1povJs9j
FramerR1povJs9j.displayName = 'Project'
FramerR1povJs9j.defaultProps = {
  height: 215,
  width: 363,
}
addPropertyControls2(FramerR1povJs9j, {
  dqmLn4hHN: {
    __defaultAssetReference:
      'data:framer/asset-reference,DOwqDly49D9Nxub0ecMLI4waA.png?originalFilename=fiberplane_docs.png&preferredSize=auto',
    title: 'Image',
    type: ControlType2.ResponsiveImage,
  },
})
addFonts(
  FramerR1povJs9j,
  [
    {
      explicitInter: true,
      fonts: [],
    },
  ],
  {
    supportsExplicitInterCodegen: true,
  },
)

// /:https://framerusercontent.com/modules/hfOdlGq2io0nshwQb2T8/S5oKYwXdyNTQcrSe31NN/FBnWH0oiT.js
var TickerFonts = getFonts(Ticker)
var MotionSectionWithFX = withFX(motion3.section)
var ProjectFonts = getFonts(stdin_default2)
var SmartComponentScopedContainerWithFXWithOptimizedAppearEffect = withOptimizedAppearEffect(
  withFX(SmartComponentScopedContainer),
)
var GridFonts = getFonts(stdin_default)
var cycleOrder = ['g5OwYKbY3', 'syRs9tbA_', 'U6_0i5gQQ']
var serializationHash2 = 'framer-NW9gQ'
var variantClassNames2 = {
  g5OwYKbY3: 'framer-v-9n4rdh',
  syRs9tbA_: 'framer-v-zax2vy',
  U6_0i5gQQ: 'framer-v-1cg770z',
}
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {}
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]))
  return nextOverrides
}
var transition12 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: 'spring',
}
var animation = {
  opacity: 0,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  x: 0,
  y: 50,
}
var transition2 = {
  bounce: 0.1,
  delay: 0,
  duration: 1,
  type: 'spring',
}
var transition3 = {
  damping: 80,
  delay: 0,
  mass: 1,
  stiffness: 400,
  type: 'spring',
}
var animation1 = {
  opacity: 1,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  transition: transition12,
  x: 0,
  y: 0,
}
var animation2 = {
  opacity: 1e-3,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  x: 0,
  y: 0,
}
var addImageAlt = (image, alt) => {
  if (!image || typeof image !== 'object') {
    return
  }
  return {
    ...image,
    alt,
  }
}
var Transition2 = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext2)
  const transition = value ?? config.transition
  const contextValue = React2.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)],
  )
  return <MotionConfigContext2.Provider value={contextValue}>{children}</MotionConfigContext2.Provider>
}
var Variants2 = motion3.create(React2.Fragment)
var humanReadableVariantMap = {
  Desktop: 'g5OwYKbY3',
  Phone: 'U6_0i5gQQ',
  Tablet: 'syRs9tbA_',
}
var getProps2 = ({ height, id, width, ...props }) => {
  return {
    ...props,
    variant: humanReadableVariantMap[props.variant] ?? props.variant ?? 'g5OwYKbY3',
  }
}
var createLayoutDependency2 = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency
  return variants.join('-')
}
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
  const fallbackRef = useRef3(null)
  const refBinding = ref ?? fallbackRef
  const defaultLayoutId = React2.useId()
  const { activeLocale, setLocale } = useLocaleInfo2()
  const componentViewport = useComponentViewport2()
  const { style, className: className2, layoutId, variant, ...restProps } = getProps2(props)
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState2({
    cycleOrder,
    defaultVariant: 'g5OwYKbY3',
    ref: refBinding,
    variant,
    variantClassNames: variantClassNames2,
  })
  const layoutDependency = createLayoutDependency2(props, variants)
  const sharedStyleClassNames = [className]
  const scopingClassNames = cx2(serializationHash2, ...sharedStyleClassNames)
  return (
    <LayoutGroup3 id={layoutId ?? defaultLayoutId}>
      <Variants2 animate={variants} initial={false}>
        <Transition2 value={transition12}>
          <motion3.section
            {...restProps}
            {...gestureHandlers}
            className={cx2(scopingClassNames, 'framer-9n4rdh', className2, classNames)}
            data-framer-name={'Desktop'}
            layoutDependency={layoutDependency}
            layoutId={'g5OwYKbY3'}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides(
              {
                syRs9tbA_: {
                  'data-framer-name': 'Tablet',
                },
                U6_0i5gQQ: {
                  'data-framer-name': 'Phone',
                },
              },
              baseVariant,
              gestureVariant,
            )}
          >
            <MotionSectionWithFX
              __framer__animate={{
                transition: transition2,
              }}
              __framer__animateOnce={true}
              __framer__enter={animation}
              __framer__styleAppearEffectEnabled={true}
              __framer__threshold={0}
              __perspectiveFX={false}
              __smartComponentFX={true}
              __targetOpacity={1}
              className={'framer-1inqsug'}
              data-framer-name={'Trusted'}
              layoutDependency={layoutDependency}
              layoutId={'cnPQKmGSj'}
              {...addPropertyOverrides(
                {
                  U6_0i5gQQ: {
                    __framer__animate: {
                      transition: transition3,
                    },
                  },
                },
                baseVariant,
                gestureVariant,
              )}
            >
              <RichText
                __fromCanvasComponent={true}
                className={'framer-6uzw6x'}
                fonts={['Inter']}
                layoutDependency={layoutDependency}
                layoutId={'g2Jk9F0qz'}
                style={{
                  '--framer-link-text-color': 'rgb(0, 153, 255)',
                  '--framer-link-text-decoration': 'underline',
                  opacity: 0.9,
                }}
                verticalAlignment={'top'}
                withExternalLayout={true}
              >
                <React2.Fragment>
                  <motion3.h2 className={'framer-styles-preset-m4awkb'} data-styles-preset={'YqcGXulro'}>
                    {'Empowering modern teams'}
                  </motion3.h2>
                </React2.Fragment>
              </RichText>
              <ComponentViewportProvider>
                <SmartComponentScopedContainer
                  className={'framer-ptb27k-container'}
                  data-framer-name={'Company logos'}
                  isAuthoredByUser={true}
                  isModuleExternal={true}
                  layoutDependency={layoutDependency}
                  layoutId={'qACkGIzd3-container'}
                  name={'Company logos'}
                  nodeId={'qACkGIzd3'}
                  rendersWithMotion={true}
                  scopeId={'FBnWH0oiT'}
                >
                  <Ticker
                    alignment={'center'}
                    direction={'left'}
                    fadeOptions={{
                      fadeAlpha: 0,
                      fadeContent: true,
                      fadeInset: 0,
                      fadeWidth: 35,
                      overflow: false,
                    }}
                    gap={80}
                    height={'100%'}
                    hoverFactor={1}
                    id={'qACkGIzd3'}
                    layoutId={'qACkGIzd3'}
                    name={'Company logos'}
                    padding={0}
                    paddingBottom={0}
                    paddingLeft={0}
                    paddingPerSide={false}
                    paddingRight={0}
                    paddingTop={0}
                    sizingOptions={{
                      heightType: true,
                      widthType: true,
                    }}
                    slots={[
                      <motion3.div
                        className={'framer-kpez2r'}
                        data-framer-name={'Wealthro'}
                        layoutDependency={layoutDependency}
                        layoutId={'xRoIVYHkX'}
                      >
                        <SVG
                          className={'framer-1pjkn8'}
                          data-framer-name={'Exclude'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={18}
                          intrinsicWidth={18}
                          layoutDependency={layoutDependency}
                          layoutId={'pKz5ajvt5'}
                          svg={
                            '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path fill-rule="evenodd" clip-rule="evenodd" d="M15.0075 8.68783C16.5101 7.94414 17.5432 6.39536 17.5432 4.60528C17.5432 2.09098 15.505 0.0527344 12.9907 0.0527344C11.1564 0.0527344 9.57546 1.13757 8.8545 2.70066C6.31756 1.24142 3.37575 0.406835 0.239014 0.406835V17.7114H17.5436C17.5436 14.405 16.6163 11.3152 15.0075 8.68783ZM12.9907 9.15782C13.7149 9.15782 14.3996 8.98871 15.0075 8.68783C13.4924 6.21346 11.373 4.14926 8.8545 2.70066C8.58723 3.28011 8.43815 3.92528 8.43815 4.60528C8.43815 7.11958 10.4764 9.15782 12.9907 9.15782Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-ncsa12'}
                          data-framer-name={'Wealthro'}
                          fonts={['GF;Instrument Sans-700']}
                          layoutDependency={layoutDependency}
                          layoutId={'ruFjPCPB5'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'R0Y7SW5zdHJ1bWVudCBTYW5zLTcwMA==',
                                '--framer-font-family': '"Instrument Sans", "Instrument Sans Placeholder", sans-serif',
                                '--framer-font-size': '19.37px',
                                '--framer-font-weight': '700',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Wealthro'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-1o4ieja'}
                        data-framer-name={'Finyon'}
                        layoutDependency={layoutDependency}
                        layoutId={'GEpcqMfHL'}
                      >
                        <SVG
                          className={'framer-58nlp3'}
                          data-framer-name={'Union'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={22}
                          intrinsicWidth={30}
                          layoutDependency={layoutDependency}
                          layoutId={'iZt53AxCN'}
                          svg={
                            '<svg width="30" height="22" viewBox="0 0 30 22" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path fill-rule="evenodd" clip-rule="evenodd" d="M28.5235 1.46863C29.0068 1.12628 28.7646 0.365234 28.1723 0.365234H14.9881C14.8623 0.365234 14.7396 0.404285 14.6369 0.476994L1.06592 10.0887C0.582551 10.431 0.82476 11.1921 1.41708 11.1921H12.2587C12.851 11.1921 13.0932 11.9531 12.6099 12.2955L1.3163 20.2941C0.832932 20.6365 1.07514 21.3975 1.66746 21.3975H14.8517C14.9775 21.3975 15.1002 21.3585 15.2029 21.2858L28.7739 11.6741C29.2572 11.3318 29.015 10.5707 28.4227 10.5707H17.5811C16.9887 10.5707 16.7465 9.80967 17.2299 9.46733L28.5235 1.46863Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-11vzbki'}
                          data-framer-name={'Finyon'}
                          fonts={['GF;Aldrich-regular']}
                          layoutDependency={layoutDependency}
                          layoutId={'y_4rbb9in'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'R0Y7QWxkcmljaC1yZWd1bGFy',
                                '--framer-font-family': '"Aldrich", "Aldrich Placeholder", sans-serif',
                                '--framer-font-size': '18.45px',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Finyon'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-1f0jvxg'}
                        data-framer-name={'Aegra'}
                        layoutDependency={layoutDependency}
                        layoutId={'qZaSTHZ1D'}
                      >
                        <SVG
                          className={'framer-1eqmj5j'}
                          data-framer-name={'Group 17'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={24}
                          intrinsicWidth={37}
                          layoutDependency={layoutDependency}
                          layoutId={'ohpN0JheW'}
                          svg={
                            '<svg width="37" height="24" viewBox="0 0 37 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n<rect x="0.558838" y="11.877" width="11.846" height="11.846" fill="white"/>\n<path d="M12.4048 0.0234375C25.8649 0.0234375 36.7763 10.634 36.7763 23.7235H24.5885C24.5899 23.6513 24.5905 23.579 24.5905 23.5065C24.5905 17.0818 19.2346 11.8735 12.6277 11.8735C12.5532 11.8735 12.4789 11.8742 12.4048 11.8755V0.0234375Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-sfzn2n'}
                          data-framer-name={'Aegra'}
                          fonts={['GF;Bricolage Grotesque-regular']}
                          layoutDependency={layoutDependency}
                          layoutId={'Y3RG4rd2n'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'top'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'R0Y7QnJpY29sYWdlIEdyb3Rlc3F1ZS1yZWd1bGFy',
                                '--framer-font-family':
                                  '"Bricolage Grotesque", "Bricolage Grotesque Placeholder", sans-serif',
                                '--framer-font-size': '23.97px',
                                '--framer-line-height': '27.43px',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Aegra'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-1e7tk0c'}
                        data-framer-name={'Portivio'}
                        layoutDependency={layoutDependency}
                        layoutId={'i7bagqV9_'}
                      >
                        <SVG
                          className={'framer-wizlf6'}
                          data-framer-name={'Group 15'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={26}
                          intrinsicWidth={23}
                          layoutDependency={layoutDependency}
                          layoutId={'XeoHkRLAV'}
                          svg={
                            '<svg width="23" height="26" viewBox="0 0 23 26" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M7.09786 2.60431L11.4429 0.0957031L15.788 2.60432C15.0149 4.22686 13.3599 5.3482 11.4429 5.3482C9.52593 5.3482 7.87086 4.22685 7.09786 2.60431Z" fill="white"/>\n<path d="M18.1642 3.97624L22.5093 6.48486L22.5093 11.5021C20.7176 11.6439 18.919 10.7713 17.9605 9.11111C17.002 7.45096 17.1456 5.45696 18.1642 3.97624Z" fill="white"/>\n<path d="M18.1642 22.3167L22.5093 19.8081L22.5093 14.7908C20.7176 14.649 18.919 15.5217 17.9605 17.1818C17.002 18.842 17.1456 20.836 18.1642 22.3167Z" fill="white"/>\n<path d="M4.6197 3.97624L0.274658 6.48486L0.274659 11.5021C2.06632 11.6439 3.86497 10.7713 4.82345 9.11111C5.78194 7.45096 5.63836 5.45696 4.6197 3.97624Z" fill="white"/>\n<path d="M4.6197 21.7718L0.274658 19.2632L0.274659 14.246C2.06632 14.1041 3.86497 14.9768 4.82345 16.6369C5.78194 18.2971 5.63836 20.2911 4.6197 21.7718Z" fill="white"/>\n<path d="M7.09786 23.1437L11.4429 25.6524L15.788 23.1437C15.0149 21.5212 13.3599 20.3999 11.4429 20.3999C9.52593 20.3999 7.87086 21.5212 7.09786 23.1437Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-1iy7nmp'}
                          data-framer-name={'Portivio'}
                          fonts={['GF;42dot Sans-regular']}
                          layoutDependency={layoutDependency}
                          layoutId={'r1ue88uD_'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'R0Y7NDJkb3QgU2Fucy1yZWd1bGFy',
                                '--framer-font-family': '"42dot Sans", "42dot Sans Placeholder", sans-serif',
                                '--framer-font-size': '18.75px',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Portivio'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-tw696m'}
                        data-framer-name={'Vaultic'}
                        layoutDependency={layoutDependency}
                        layoutId={'Tq6OxpSpO'}
                      >
                        <motion3.div
                          className={'framer-1p5zyzb'}
                          data-framer-name={'Logo'}
                          layoutDependency={layoutDependency}
                          layoutId={'cfdtfDL6t'}
                        >
                          <motion3.div
                            className={'framer-fldsrd'}
                            data-framer-name={'Ellipse 153'}
                            layoutDependency={layoutDependency}
                            layoutId={'oTLl0Ryb2'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                          <motion3.div
                            className={'framer-16cxk40'}
                            data-framer-name={'Ellipse 156'}
                            layoutDependency={layoutDependency}
                            layoutId={'dFLO4Qhow'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                          <motion3.div
                            className={'framer-3yn0e'}
                            data-framer-name={'Ellipse 154'}
                            layoutDependency={layoutDependency}
                            layoutId={'GpijuMWIh'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                          <motion3.div
                            className={'framer-1o7ltjs'}
                            data-framer-name={'Ellipse 157'}
                            layoutDependency={layoutDependency}
                            layoutId={'PPXudOnVo'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                          <motion3.div
                            className={'framer-1at0acx'}
                            data-framer-name={'Ellipse 160'}
                            layoutDependency={layoutDependency}
                            layoutId={'ApPvUdmUa'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                          <motion3.div
                            className={'framer-18vwn94'}
                            data-framer-name={'Ellipse 155'}
                            layoutDependency={layoutDependency}
                            layoutId={'CNc4_b5XQ'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                          <motion3.div
                            className={'framer-1uiexxw'}
                            data-framer-name={'Ellipse 158'}
                            layoutDependency={layoutDependency}
                            layoutId={'d6OF_stH4'}
                            style={{
                              backgroundColor: 'rgb(255, 255, 255)',
                              borderBottomLeftRadius: '100%',
                              borderBottomRightRadius: '100%',
                              borderTopLeftRadius: '100%',
                              borderTopRightRadius: '100%',
                            }}
                          />
                        </motion3.div>
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-40twg2'}
                          data-framer-name={'Vaultic'}
                          fonts={['BI;Aileron/Regular/v0']}
                          layoutDependency={layoutDependency}
                          layoutId={'Jf60Y55as'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'Qkk7QWlsZXJvbi9SZWd1bGFyL3Yw',
                                '--framer-font-family': '"Aileron", "Aileron Placeholder", sans-serif',
                                '--framer-font-size': '19.62px',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Vaultic'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-1f9ha54'}
                        data-framer-name={'Altoris'}
                        layoutDependency={layoutDependency}
                        layoutId={'r3QtvaDJY'}
                      >
                        <SVG
                          className={'framer-1foh7nc'}
                          data-framer-name={'Subtract'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={29}
                          intrinsicWidth={29}
                          layoutDependency={layoutDependency}
                          layoutId={'QwjcIs9os'}
                          svg={
                            '<svg width="29" height="29" viewBox="0 0 29 29" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path fill-rule="evenodd" clip-rule="evenodd" d="M28.5991 13.7238H14.6503V16.0303H28.5994C28.0136 23.2212 21.9922 28.8743 14.6503 28.8743C6.92066 28.8743 0.654541 22.6082 0.654541 14.8786C0.654541 7.14893 6.92066 0.882812 14.6503 0.882812C21.9911 0.882812 28.0119 6.53436 28.5991 13.7238Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-hvwyme'}
                          data-framer-name={'Altoris'}
                          fonts={['Inter-SemiBold']}
                          layoutDependency={layoutDependency}
                          layoutId={'uD9Bre7BZ'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'SW50ZXItU2VtaUJvbGQ=',
                                '--framer-font-family': '"Inter", "Inter Placeholder", sans-serif',
                                '--framer-font-size': '15.74px',
                                '--framer-font-weight': '600',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Altoris'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-suncao'}
                        data-framer-name={'Quantora'}
                        layoutDependency={layoutDependency}
                        layoutId={'iOpM0DWww'}
                      >
                        <SVG
                          className={'framer-a4lsxi'}
                          data-framer-name={'Group 26'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={22}
                          intrinsicWidth={27}
                          layoutDependency={layoutDependency}
                          layoutId={'pJ8uYB4lW'}
                          svg={
                            '<svg width="27" height="22" viewBox="0 0 27 22" fill="none" xmlns="http://www.w3.org/2000/svg">\n<rect x="0.310547" y="0.857422" width="26.4339" height="4.24082" fill="white"/>\n<path d="M12.8713 21.6721L12.8713 10.019L8.501 6.17383H0.310547V11.5518H6.87224L6.87224 21.6721H12.8713Z" fill="white"/>\n<path d="M14.1833 21.6721L14.1833 10.019L18.5537 6.17383H26.7441V11.5518H20.1825L20.1825 21.6721H14.1833Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-xzjtzd'}
                          data-framer-name={'Quantora'}
                          fonts={['Inter-SemiBold']}
                          layoutDependency={layoutDependency}
                          layoutId={'HNmWM5uTQ'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'SW50ZXItU2VtaUJvbGQ=',
                                '--framer-font-family': '"Inter", "Inter Placeholder", sans-serif',
                                '--framer-font-size': '18.22px',
                                '--framer-font-weight': '600',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Quantora'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                      <motion3.div
                        className={'framer-167ns4s'}
                        data-framer-name={'Fundara'}
                        layoutDependency={layoutDependency}
                        layoutId={'U7aJc16wy'}
                      >
                        <SVG
                          className={'framer-1qgl5lv'}
                          data-framer-name={'Group 18'}
                          fill={'rgba(0,0,0,1)'}
                          intrinsicHeight={16}
                          intrinsicWidth={49}
                          layoutDependency={layoutDependency}
                          layoutId={'Q5Q0YJfdl'}
                          svg={
                            '<svg width="49" height="16" viewBox="0 0 49 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M0.317139 0.353516H11.1019L21.8871 15.5932H11.1022L0.317139 0.353516Z" fill="white"/>\n<path d="M14.9199 0.353516H25.7047L36.4898 15.5932H25.705L14.9199 0.353516Z" fill="white"/>\n<path d="M48.1536 0.169922H37.3688L30.3104 7.97428H41.0952L48.1536 0.169922Z" fill="white"/>\n</svg>\n'
                          }
                          withExternalLayout={true}
                        />
                        <RichText
                          __fromCanvasComponent={true}
                          className={'framer-nh9fdn'}
                          data-framer-name={'Fundara'}
                          fonts={['Inter-SemiBold']}
                          layoutDependency={layoutDependency}
                          layoutId={'PPUd4YLZk'}
                          style={{
                            '--extracted-r6o4lv': 'rgb(255, 255, 255)',
                            '--framer-paragraph-spacing': '0px',
                          }}
                          verticalAlignment={'center'}
                          withExternalLayout={true}
                        >
                          <React2.Fragment>
                            <motion3.p
                              style={{
                                '--font-selector': 'SW50ZXItU2VtaUJvbGQ=',
                                '--framer-font-family': '"Inter", "Inter Placeholder", sans-serif',
                                '--framer-font-size': '17.81px',
                                '--framer-font-weight': '600',
                                '--framer-text-color': 'var(--extracted-r6o4lv, rgb(255, 255, 255))',
                              }}
                            >
                              {'Fundara'}
                            </motion3.p>
                          </React2.Fragment>
                        </RichText>
                      </motion3.div>,
                    ]}
                    speed={30}
                    style={{
                      height: '100%',
                      maxWidth: '100%',
                      width: '100%',
                    }}
                    width={'100%'}
                    {...addPropertyOverrides(
                      {
                        U6_0i5gQQ: {
                          gap: 60,
                        },
                      },
                      baseVariant,
                      gestureVariant,
                    )}
                  />
                </SmartComponentScopedContainer>
              </ComponentViewportProvider>
            </MotionSectionWithFX>
            <ComponentViewportProvider>
              <SmartComponentScopedContainerWithFXWithOptimizedAppearEffect
                __perspectiveFX={false}
                __smartComponentFX={true}
                __targetOpacity={1}
                animate={animation1}
                className={'framer-g5xaw4-container'}
                data-framer-appear-id={'g5xaw4'}
                initial={animation2}
                isAuthoredByUser={true}
                isModuleExternal={true}
                layoutDependency={layoutDependency}
                layoutId={'bXgjscUJJ-container'}
                nodeId={'bXgjscUJJ'}
                optimized={true}
                rendersWithMotion={true}
                scopeId={'FBnWH0oiT'}
              >
                <Ticker
                  alignment={'center'}
                  direction={'right'}
                  fadeOptions={{
                    fadeAlpha: 0,
                    fadeContent: false,
                    fadeInset: 0,
                    fadeWidth: 25,
                    overflow: false,
                  }}
                  gap={30}
                  height={'100%'}
                  hoverFactor={0.4}
                  id={'bXgjscUJJ'}
                  layoutId={'bXgjscUJJ'}
                  padding={10}
                  paddingBottom={10}
                  paddingLeft={10}
                  paddingPerSide={false}
                  paddingRight={10}
                  paddingTop={10}
                  sizingOptions={{
                    heightType: true,
                    widthType: true,
                  }}
                  slots={[
                    <ComponentViewportProvider height={215}>
                      <SmartComponentScopedContainer
                        className={'framer-1f68c6k-container'}
                        inComponentSlot={true}
                        layoutDependency={layoutDependency}
                        layoutId={'cLEEZ90D5-container'}
                        nodeId={'cLEEZ90D5'}
                        rendersWithMotion={true}
                        scopeId={'FBnWH0oiT'}
                      >
                        {_jsx3(stdin_default2, {
                          dqmLn4hHN: addImageAlt(
                            {
                              pixelHeight: 432,
                              pixelWidth: 768,
                              src: 'https://framerusercontent.com/images/5mdQNsHKpm07ejwH4iup800no4.png?width=768&height=432',
                              srcSet:
                                'https://framerusercontent.com/images/5mdQNsHKpm07ejwH4iup800no4.png?scale-down-to=512&width=768&height=432 512w,https://framerusercontent.com/images/5mdQNsHKpm07ejwH4iup800no4.png?width=768&height=432 768w',
                            },
                            'Project Image',
                          ),
                          height: '100%',
                          id: 'cLEEZ90D5',
                          layoutId: 'cLEEZ90D5',
                          width: '100%',
                        })}
                      </SmartComponentScopedContainer>
                    </ComponentViewportProvider>,
                    <ComponentViewportProvider height={215}>
                      <SmartComponentScopedContainer
                        className={'framer-1r37jvn-container'}
                        inComponentSlot={true}
                        layoutDependency={layoutDependency}
                        layoutId={'Le0yrrNb8-container'}
                        nodeId={'Le0yrrNb8'}
                        rendersWithMotion={true}
                        scopeId={'FBnWH0oiT'}
                      >
                        {_jsx3(stdin_default2, {
                          height: '100%',
                          id: 'Le0yrrNb8',
                          layoutId: 'Le0yrrNb8',
                          width: '100%',
                        })}
                      </SmartComponentScopedContainer>
                    </ComponentViewportProvider>,
                    <ComponentViewportProvider height={215}>
                      <SmartComponentScopedContainer
                        className={'framer-vyg56j-container'}
                        inComponentSlot={true}
                        layoutDependency={layoutDependency}
                        layoutId={'hTPz82dSe-container'}
                        nodeId={'hTPz82dSe'}
                        rendersWithMotion={true}
                        scopeId={'FBnWH0oiT'}
                      >
                        {_jsx3(stdin_default2, {
                          dqmLn4hHN: addImageAlt(
                            {
                              pixelHeight: 432,
                              pixelWidth: 768,
                              src: 'https://framerusercontent.com/images/SQYu6wIciOsATo1J3dIPbGGQU.png?width=768&height=432',
                              srcSet:
                                'https://framerusercontent.com/images/SQYu6wIciOsATo1J3dIPbGGQU.png?scale-down-to=512&width=768&height=432 512w,https://framerusercontent.com/images/SQYu6wIciOsATo1J3dIPbGGQU.png?width=768&height=432 768w',
                            },
                            'Project Image',
                          ),
                          height: '100%',
                          id: 'hTPz82dSe',
                          layoutId: 'hTPz82dSe',
                          width: '100%',
                        })}
                      </SmartComponentScopedContainer>
                    </ComponentViewportProvider>,
                  ]}
                  speed={60}
                  style={{
                    height: '100%',
                    width: '100%',
                  }}
                  width={'100%'}
                />
              </SmartComponentScopedContainerWithFXWithOptimizedAppearEffect>
            </ComponentViewportProvider>
            <motion3.div
              className={'framer-pof1yx'}
              data-framer-name={'Grid'}
              layoutDependency={layoutDependency}
              layoutId={'bxAo1OTg1'}
            >
              <ComponentViewportProvider
                height={800}
                width={componentViewport?.width || '100vw'}
                y={(componentViewport?.y || 0) + 0 + 0}
              >
                <SmartComponentScopedContainer
                  className={'framer-1ddsyz7-container'}
                  layoutDependency={layoutDependency}
                  layoutId={'DhS012IWs-container'}
                  nodeId={'DhS012IWs'}
                  rendersWithMotion={true}
                  scopeId={'FBnWH0oiT'}
                >
                  {_jsx3(stdin_default, {
                    height: '100%',
                    id: 'DhS012IWs',
                    layoutId: 'DhS012IWs',
                    style: {
                      height: '100%',
                      width: '100%',
                    },
                    variant: 'hdexXEO_X',
                    width: '100%',
                    ...addPropertyOverrides(
                      {
                        syRs9tbA_: {
                          variant: 'QYQ1r9X7u',
                        },
                        U6_0i5gQQ: {
                          variant: 'mWhcw8lXH',
                        },
                      },
                      baseVariant,
                      gestureVariant,
                    ),
                  })}
                </SmartComponentScopedContainer>
              </ComponentViewportProvider>
            </motion3.div>
          </motion3.section>
        </Transition2>
      </Variants2>
    </LayoutGroup3>
  )
})
var css3 = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-NW9gQ.framer-1jv9jw3, .framer-NW9gQ .framer-1jv9jw3 { display: block; }',
  '.framer-NW9gQ.framer-9n4rdh { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 44px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px 100px 40px 100px; position: relative; width: 1200px; }',
  '.framer-NW9gQ .framer-1inqsug { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 31px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; z-index: 1; }',
  '.framer-NW9gQ .framer-6uzw6x { flex: none; height: auto; position: relative; white-space: pre; width: auto; z-index: 0; }',
  '.framer-NW9gQ .framer-ptb27k-container { flex: none; height: 33px; max-width: 1000px; position: relative; width: 100%; }',
  '.framer-NW9gQ .framer-kpez2r { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 24px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }',
  '.framer-NW9gQ .framer-1pjkn8 { flex: none; height: 18px; position: relative; width: 18px; }',
  '.framer-NW9gQ .framer-ncsa12, .framer-NW9gQ .framer-11vzbki, .framer-NW9gQ .framer-sfzn2n, .framer-NW9gQ .framer-1iy7nmp, .framer-NW9gQ .framer-40twg2, .framer-NW9gQ .framer-hvwyme, .framer-NW9gQ .framer-xzjtzd, .framer-NW9gQ .framer-nh9fdn { flex: none; height: auto; position: relative; white-space: pre; width: auto; }',
  '.framer-NW9gQ .framer-1o4ieja { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 21px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }',
  '.framer-NW9gQ .framer-58nlp3 { flex: none; height: 22px; position: relative; width: 30px; }',
  '.framer-NW9gQ .framer-1f0jvxg, .framer-NW9gQ .framer-1f9ha54 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 28px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }',
  '.framer-NW9gQ .framer-1eqmj5j { flex: none; height: 19px; position: relative; width: 30px; }',
  '.framer-NW9gQ .framer-1e7tk0c, .framer-NW9gQ .framer-tw696m { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 26px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }',
  '.framer-NW9gQ .framer-wizlf6 { flex: none; height: 26px; position: relative; width: 23px; }',
  '.framer-NW9gQ .framer-1p5zyzb { flex: none; height: 24px; overflow: visible; position: relative; width: 24px; }',
  '.framer-NW9gQ .framer-fldsrd { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 0px; position: absolute; top: 0px; width: 6px; }',
  '.framer-NW9gQ .framer-16cxk40 { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 9px; position: absolute; top: 0px; width: 6px; }',
  '.framer-NW9gQ .framer-3yn0e { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 0px; position: absolute; top: 9px; width: 6px; }',
  '.framer-NW9gQ .framer-1o7ltjs { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 9px; position: absolute; top: 9px; width: 6px; }',
  '.framer-NW9gQ .framer-1at0acx { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 6px); left: 18px; position: absolute; top: 9px; width: 6px; }',
  '.framer-NW9gQ .framer-18vwn94 { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 5px); left: 0px; position: absolute; top: 19px; width: 6px; }',
  '.framer-NW9gQ .framer-1uiexxw { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 5px); left: 9px; position: absolute; top: 19px; width: 6px; }',
  '.framer-NW9gQ .framer-1foh7nc { flex: none; height: 29px; position: relative; width: 29px; }',
  '.framer-NW9gQ .framer-suncao, .framer-NW9gQ .framer-167ns4s { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 22px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }',
  '.framer-NW9gQ .framer-a4lsxi { flex: none; height: 22px; position: relative; width: 27px; }',
  '.framer-NW9gQ .framer-1qgl5lv { flex: none; height: 16px; position: relative; width: 49px; }',
  '.framer-NW9gQ .framer-g5xaw4-container { flex: none; height: 253px; position: relative; width: 1200px; }',
  '.framer-NW9gQ .framer-1f68c6k-container, .framer-NW9gQ .framer-1r37jvn-container, .framer-NW9gQ .framer-vyg56j-container { height: auto; position: relative; width: auto; }',
  '.framer-NW9gQ .framer-pof1yx { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 800px; justify-content: center; overflow: hidden; padding: 0px; position: absolute; right: 0px; top: 0px; width: 100%; z-index: 1; }',
  '.framer-NW9gQ .framer-1ddsyz7-container { flex: none; height: 800px; left: calc(50.00000000000002% - 100% / 2); position: absolute; top: 0px; width: 100%; z-index: 0; }',
  '.framer-NW9gQ.framer-v-zax2vy.framer-9n4rdh { gap: 50px; padding: 0px 40px 40px 40px; width: 810px; }',
  '.framer-NW9gQ.framer-v-zax2vy .framer-1inqsug { order: 0; }',
  '.framer-NW9gQ.framer-v-zax2vy .framer-g5xaw4-container { order: 2; }',
  '.framer-NW9gQ.framer-v-zax2vy .framer-pof1yx { order: 1; }',
  '.framer-NW9gQ.framer-v-1cg770z.framer-9n4rdh { gap: 120px; padding: 0px 20px 80px 20px; width: 390px; }',
  '.framer-NW9gQ.framer-v-1cg770z .framer-pof1yx { z-index: 0; }',
  ...css,
]
var FramerFBnWH0oiT = withCSS2(Component2, css3, 'framer-NW9gQ')
var stdin_default3 = FramerFBnWH0oiT
FramerFBnWH0oiT.displayName = 'Intro Section'
FramerFBnWH0oiT.defaultProps = {
  height: 426,
  width: 1200,
}
addPropertyControls3(FramerFBnWH0oiT, {
  variant: {
    options: ['g5OwYKbY3', 'syRs9tbA_', 'U6_0i5gQQ'],
    optionTitles: ['Desktop', 'Tablet', 'Phone'],
    title: 'Variant',
    type: ControlType3.Enum,
  },
})
addFonts2(
  FramerFBnWH0oiT,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F',
          url: 'https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116',
          url: 'https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+1F00-1FFF',
          url: 'https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0370-03FF',
          url: 'https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF',
          url: 'https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD',
          url: 'https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB',
          url: 'https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2',
          weight: '400',
        },
        {
          family: 'Instrument Sans',
          source: 'google',
          style: 'normal',
          url: 'https://fonts.gstatic.com/s/instrumentsans/v3/pximypc9vsFDm051Uf6KVwgkfoSxQ0GsQv8ToedPibnr-yp2JGEJOH9npSQi_gfwmS0v3_7Y.woff2',
          weight: '700',
        },
        {
          family: 'Aldrich',
          source: 'google',
          style: 'normal',
          url: 'https://fonts.gstatic.com/s/aldrich/v22/MCoTzAn-1s3IGyJMZaUS3pP5H_E.woff2',
          weight: '400',
        },
        {
          family: 'Bricolage Grotesque',
          source: 'google',
          style: 'normal',
          url: 'https://fonts.gstatic.com/s/bricolagegrotesque/v8/3y9U6as8bTXq_nANBjzKo3IeZx8z6up5BeSl5jBNz_19PpbpMXuECpwUxJBOm_OJWiaaD30YfKfjZZoLvRviyMgvs-wJDtw.woff2',
          weight: '400',
        },
        {
          family: 'Aileron',
          source: 'builtIn',
          style: 'normal',
          url: 'https://framerusercontent.com/assets/LnlFZ5ZUXRaYAm8jDpvZSmzclA.woff2',
          weight: '400',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F',
          url: 'https://framerusercontent.com/assets/hyOgCu0Xnghbimh0pE8QTvtt2AU.woff2',
          weight: '600',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116',
          url: 'https://framerusercontent.com/assets/NeGmSOXrPBfEFIy5YZeHq17LEDA.woff2',
          weight: '600',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+1F00-1FFF',
          url: 'https://framerusercontent.com/assets/oYaAX5himiTPYuN8vLWnqBbfD2s.woff2',
          weight: '600',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange: 'U+0370-03FF',
          url: 'https://framerusercontent.com/assets/lEJLP4R0yuCaMCjSXYHtJw72M.woff2',
          weight: '600',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF',
          url: 'https://framerusercontent.com/assets/cRJyLNuTJR5jbyKzGi33wU9cqIQ.woff2',
          weight: '600',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD',
          url: 'https://framerusercontent.com/assets/yDtI2UI8XcEg1W2je9XPN3Noo.woff2',
          weight: '600',
        },
        {
          family: 'Inter',
          source: 'framer',
          style: 'normal',
          unicodeRange:
            'U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB',
          url: 'https://framerusercontent.com/assets/A0Wcc7NgXMjUuFdquHDrIZpzZw0.woff2',
          weight: '600',
        },
      ],
    },
    ...TickerFonts,
    ...ProjectFonts,
    ...GridFonts,
    ...getFontsFromSharedStyle(fonts),
  ],
  {
    supportsExplicitInterCodegen: true,
  },
)

// virtual:intro-section
import { WithFramerBreakpoints } from 'unframer'
import { jsx } from 'react/jsx-runtime'
var locales = []
var defaultResponsiveVariants = {
  base: 'U6_0i5gQQ',
  md: 'syRs9tbA_',
  xl: 'g5OwYKbY3',
}
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <ContextProviders
      routes={routes}
      framerSiteId={'6ea1ba37e05fac32a45356fef8456248177d20a6a62facacd4fc997df2f330fd'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default3, {
        ...rest,
      })}
    </ContextProviders>
  )
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders IntroSectionFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = '', ...rest }) => {
  return (
    <ContextProviders
      routes={routes}
      framerSiteId={'6ea1ba37e05fac32a45356fef8456248177d20a6a62facacd4fc997df2f330fd'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints Component={stdin_default3} variants={defaultResponsiveVariants} {...rest} />
    </ContextProviders>
  )
}
Object.assign(ComponentWithRoot, stdin_default3)
var intro_section_default = ComponentWithRoot
export { intro_section_default as default }
