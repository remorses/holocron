// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project dfa04aa1c5bdec07 "Jet - SaaS Template (copy)", do not edit manually */
'use client'

import { stdin_default as stdin_default2 } from './chunks/chunk-ATDUJXYA.js'
import { stdin_default } from './chunks/chunk-MFJ4W77Q.js'

// virtual:comparison-info-icon
import { Fragment as Fragment2 } from 'react'
import { ContextProviders } from 'unframer'

// /:https://framerusercontent.com/modules/AnPPgcVL3VkeH2a34IFb/ABZp1Zm7MWAZySp2FfMR/ORQkizUX8.js
import { jsx as _jsx, jsxs as _jsxs } from 'react/jsx-runtime'
import {
  addFonts,
  addPropertyControls,
  ControlType,
  cx,
  getFonts,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from 'unframer'
import { LayoutGroup, motion, MotionConfigContext } from 'unframer'
import * as React from 'react'
import { useRef } from 'react'
var IconFonts = getFonts(stdin_default)
var Icon1Fonts = getFonts(stdin_default2)
var cycleOrder = ['oYA80aR0m', 'H0qPPLZAy']
var serializationHash = 'framer-3prZs'
var variantClassNames = {
  H0qPPLZAy: 'framer-v-jrihv6',
  oYA80aR0m: 'framer-v-1dbsmb9',
}
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {}
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]))
  return nextOverrides
}
var transition1 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: 'spring',
}
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext)
  const transition = value ?? config.transition
  const contextValue = React.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)],
  )
  return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}
var Variants = motion.create(React.Fragment)
var humanReadableVariantMap = {
  Checkmark: 'oYA80aR0m',
  X: 'H0qPPLZAy',
}
var getProps = ({ height, id, width, ...props }) => {
  return {
    ...props,
    variant: humanReadableVariantMap[props.variant] ?? props.variant ?? 'oYA80aR0m',
  }
}
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency
  return variants.join('-')
}
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null)
  const refBinding = ref ?? fallbackRef
  const defaultLayoutId = React.useId()
  const { activeLocale, setLocale } = useLocaleInfo()
  const componentViewport = useComponentViewport()
  const { style, className, layoutId, variant, ...restProps } = getProps(props)
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: 'oYA80aR0m',
    ref: refBinding,
    variant,
    variantClassNames,
  })
  const layoutDependency = createLayoutDependency(props, variants)
  const sharedStyleClassNames = []
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)
  const isDisplayed = () => {
    if (baseVariant === 'H0qPPLZAy') return false
    return true
  }
  const isDisplayed1 = () => {
    if (baseVariant === 'H0qPPLZAy') return true
    return false
  }
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition1}>
          <motion.div
            {...restProps}
            {...gestureHandlers}
            className={cx(scopingClassNames, 'framer-1dbsmb9', className, classNames)}
            data-framer-name={'Checkmark'}
            layoutDependency={layoutDependency}
            layoutId={'oYA80aR0m'}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides(
              {
                H0qPPLZAy: {
                  'data-framer-name': 'X',
                },
              },
              baseVariant,
              gestureVariant,
            )}
          >
            {isDisplayed() &&
              _jsx(stdin_default, {
                animated: true,
                className: 'framer-19m2zj3',
                'data-framer-name': 'Checkmark',
                layoutDependency,
                layoutId: 'U4L2cGmDC',
                name: 'Checkmark',
                style: {
                  '--13bnw74': 'var(--token-19e7a84f-9c9f-4761-ac3b-54ec81f5f8e0, rgb(0, 230, 197))',
                },
              })}
            {isDisplayed1() &&
              _jsx(stdin_default2, {
                animated: true,
                className: 'framer-16ecvrm',
                'data-framer-name': 'X',
                layoutDependency,
                layoutId: 'L8YMkR14s',
                name: 'X',
                style: {
                  '--13bnw74': 'var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))',
                },
              })}
          </motion.div>
        </Transition>
      </Variants>
    </LayoutGroup>
  )
})
var css = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-3prZs.framer-9ge2h7, .framer-3prZs .framer-9ge2h7 { display: block; }',
  '.framer-3prZs.framer-1dbsmb9 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }',
  '.framer-3prZs .framer-19m2zj3, .framer-3prZs .framer-16ecvrm { flex: none; height: var(--framer-aspect-ratio-supported, 24px); position: relative; width: 24px; }',
]
var FramerORQkizUX8 = withCSS(Component, css, 'framer-3prZs')
var stdin_default3 = FramerORQkizUX8
FramerORQkizUX8.displayName = 'Comparison Info Icon'
FramerORQkizUX8.defaultProps = {
  height: 24,
  width: 24,
}
addPropertyControls(FramerORQkizUX8, {
  variant: {
    options: ['oYA80aR0m', 'H0qPPLZAy'],
    optionTitles: ['Checkmark', 'X'],
    title: 'Variant',
    type: ControlType.Enum,
  },
})
addFonts(
  FramerORQkizUX8,
  [
    {
      explicitInter: true,
      fonts: [],
    },
    ...IconFonts,
    ...Icon1Fonts,
  ],
  {
    supportsExplicitInterCodegen: true,
  },
)

// virtual:comparison-info-icon
import { WithFramerBreakpoints } from 'unframer'
import { jsx } from 'react/jsx-runtime'
var locales = []
var defaultResponsiveVariants = {}
stdin_default3.Responsive = ({ locale, ...rest }) => {
  return (
    <ContextProviders
      routes={{
        Agq1L2jDe: {
          path: '/careers/:slug',
        },
        J_r8CT7G7: {
          path: '/about',
        },
        SOf0RbDE_: {
          path: '/blog',
        },
        TQDjkQC2A: {
          path: '/contact',
        },
        YBTUYW5mq: {
          path: '/pricing',
        },
        a5CCfdDiy: {
          path: '/updates/:slug',
        },
        augiA20Il: {
          path: '/',
        },
        cpP7I9WGp: {
          path: '/404',
        },
        e9YIc4Uv5: {
          path: '/waitlist',
        },
        inNalAASs: {
          path: '/blog/:slug',
        },
        ixIXvnG3U: {
          path: '/legal/:slug',
        },
        rX7FOhQc0: {
          path: '/updates',
        },
        so5jTiDIE: {
          path: '/careers',
        },
      }}
      framerSiteId={'dfa04aa1c5bdec07246cce5cf5bdd608b64f5245b2256932daafbe1cb51c98be'}
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints Component={stdin_default3} variants={defaultResponsiveVariants} {...rest} />
    </ContextProviders>
  )
}
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <ContextProviders
      routes={{
        Agq1L2jDe: {
          path: '/careers/:slug',
        },
        J_r8CT7G7: {
          path: '/about',
        },
        SOf0RbDE_: {
          path: '/blog',
        },
        TQDjkQC2A: {
          path: '/contact',
        },
        YBTUYW5mq: {
          path: '/pricing',
        },
        a5CCfdDiy: {
          path: '/updates/:slug',
        },
        augiA20Il: {
          path: '/',
        },
        cpP7I9WGp: {
          path: '/404',
        },
        e9YIc4Uv5: {
          path: '/waitlist',
        },
        inNalAASs: {
          path: '/blog/:slug',
        },
        ixIXvnG3U: {
          path: '/legal/:slug',
        },
        rX7FOhQc0: {
          path: '/updates',
        },
        so5jTiDIE: {
          path: '/careers',
        },
      }}
      framerSiteId={'dfa04aa1c5bdec07246cce5cf5bdd608b64f5245b2256932daafbe1cb51c98be'}
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default3, {
        ...rest,
      })}
    </ContextProviders>
  )
}
Object.assign(ComponentWithRoot, stdin_default3)
export { ComponentWithRoot as default }
