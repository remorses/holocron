// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project dfa04aa1c5bdec07 "Jet - SaaS Template (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/iFsRQWu2YhjwxjIeW1yZ/JZ581VaLBl7Xq8m847iQ/JHIXaL8ks.js
import { jsx as _jsx } from 'react/jsx-runtime'
import { addPropertyControls, ControlType, cx, motion, useSVGTemplate, withCSS } from 'unframer'
import * as React from 'react'
import { forwardRef as forwardRef2 } from 'react'
var mask = 'var(--framer-icon-mask)'
var Base = /* @__PURE__ */ forwardRef2(function (props, ref) {
  return /* @__PURE__ */ _jsx('svg', {
    ...props,
    ref,
    children: props.children,
  })
})
var MotionSVG = motion.create(Base)
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
  const { animated, layoutId, children, ...rest } = props
  return animated
    ? /* @__PURE__ */ _jsx(MotionSVG, { ...rest, layoutId, ref, children })
    : /* @__PURE__ */ _jsx('svg', { ...rest, ref, children })
})
var svg =
  '<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 5.711 0 C 4.18 0.005 2.719 0.641 1.673 1.758 C 0.591 2.905 -0.008 4.424 0 6 L 9.75 1.758 C 8.703 0.641 7.242 0.005 5.711 0 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="6px" id="pAXrMTCAQ" transform="translate(12 3.75)" width="9.750078187907462px"/><path d="M 4.553 0.205 C 3.016 -0.207 1.379 0.007 0 0.799 L 8.795 7.5 C 9.208 5.974 8.992 4.346 8.196 2.98 C 7.398 1.607 6.087 0.609 4.553 0.205 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="7.500238377943234px" id="Z8HJGPeSp" transform="translate(12 9)" width="9.0002409528297px"/><path d="M 8.078 1.758 C 7.033 0.637 5.571 0 4.039 0 C 2.507 0 1.044 0.637 0 1.758 L 9.75 6 C 9.758 4.423 9.159 2.904 8.078 1.758 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="5.99979425568953px" id="hqmmN11aq" transform="translate(2.25 3.75)" width="9.750078187907452px"/><path d="M 4.448 0.205 C 2.913 0.609 1.602 1.607 0.805 2.98 C 0.008 4.346 -0.208 5.974 0.206 7.5 L 9 0.799 C 7.621 0.007 5.984 -0.207 4.448 0.205 Z" fill-opacity="var(--1m6trwb, 0)" fill="var(--21h8s6, rgb(0, 0, 0))" height="7.500238377943205px" id="EoshfxxvV" transform="translate(3 9)" width="9.000240952829689px"/><path d="M 0 6 C -0.008 4.423 0.591 2.904 1.673 1.758 C 2.717 0.637 4.18 0 5.711 0 C 7.243 0 8.706 0.637 9.75 1.758 Z" fill="transparent" height="5.99979425568953px" id="DFOTjZupX" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(12 3.75)" width="9.750078187907448px"/><path d="M 0 0.8 C 2.867 -0.845 6.525 0.128 8.196 2.98 C 8.992 4.346 9.208 5.975 8.795 7.501 Z" fill="transparent" height="7.500879592578968px" id="Di9D8fenH" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(12 8.999)" width="9.0002409528297px"/><path d="M 9.75 6 C 9.758 4.423 9.159 2.904 8.078 1.758 C 7.033 0.637 5.571 0 4.039 0 C 2.507 0 1.044 0.637 0 1.758 Z" fill="transparent" height="5.99979425568953px" id="pVn_zjucq" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(2.25 3.75)" width="9.750078187907452px"/><path d="M 9 0.8 C 6.133 -0.845 2.476 0.128 0.805 2.98 C 0.008 4.346 -0.208 5.975 0.206 7.501 Z" fill="transparent" height="7.500879592578968px" id="tw9PuJ3zQ" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(3 8.999)" width="9.000240952829689px"/><path d="M 0 0 L 0 11.201" fill="transparent" height="11.201250000000002px" id="Db_20Izyd" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="var(--pgex8v, 1.5)" stroke="var(--21h8s6, rgb(0, 0, 0))" transform="translate(12 9.799)" width="1px"/></svg>'
var getProps = ({ alpha, color, height, id, width, width1, ...props }) => {
  return {
    ...props,
    ezTt3ayMo: color ?? props.ezTt3ayMo ?? 'rgb(0, 0, 0)',
    lschgej4H: width1 ?? props.lschgej4H ?? 1.5,
    qxTvv_EBh: alpha ?? props.qxTvv_EBh,
  }
}
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const { style, className, layoutId, variant, ezTt3ayMo, lschgej4H, qxTvv_EBh, ...restProps } = getProps(props)
  const href = useSVGTemplate('1958082435', svg)
  return /* @__PURE__ */ _jsx(SVG, {
    ...restProps,
    className: cx('framer-obdtx', className),
    layoutId,
    ref,
    role: 'presentation',
    style: {
      '--1m6trwb': qxTvv_EBh,
      '--21h8s6': ezTt3ayMo,
      '--pgex8v': lschgej4H,
      ...style,
    },
    viewBox: '0 0 24 24',
    children: /* @__PURE__ */ _jsx('use', { href }),
  })
})
var css = [`.framer-obdtx { -webkit-mask: ${mask}; aspect-ratio: 1; display: block; mask: ${mask}; width: 24px; }`]
var Icon = withCSS(Component, css, 'framer-obdtx')
Icon.displayName = 'Tree Palm'
var stdin_default = Icon
addPropertyControls(Icon, {
  ezTt3ayMo: {
    defaultValue: 'rgb(0, 0, 0)',
    hidden: false,
    title: 'Color',
    type: ControlType.Color,
  },
  lschgej4H: {
    defaultValue: 1.5,
    displayStepper: true,
    hidden: false,
    max: 6,
    min: 0,
    step: 0.5,
    title: 'Width',
    type: ControlType.Number,
  },
  qxTvv_EBh: {
    defaultValue: 0,
    displayStepper: true,
    hidden: false,
    max: 1,
    min: 0,
    step: 0.1,
    title: 'Alpha',
    type: ControlType.Number,
  },
})
var __FramerMetadata__ = {
  exports: {
    default: {
      type: 'reactComponent',
      name: 'Icon',
      slots: [],
      annotations: {
        framerVariables: '{"ezTt3ayMo":"color","lschgej4H":"width1","qxTvv_EBh":"alpha"}',
        framerSupportedLayoutHeight: 'any-prefer-fixed',
        framerIntrinsicHeight: '24',
        framerImmutableVariables: 'true',
        framerIntrinsicWidth: '24',
        framerContractVersion: '1',
        framerVector:
          '{"name":"Tree Palm","color":{"type":"variable","value":"21h8s6"},"set":{"localId":"vectorSet/NGVKdicsm","id":"NGVKdicsm","moduleId":"omX0gWFPqDwhaiWwf6ab"}}',
        framerSupportedLayoutWidth: 'any-prefer-fixed',
        framerDisableUnlink: 'true',
      },
    },
    __FramerMetadata__: { type: 'variable' },
  },
}
export { __FramerMetadata__, stdin_default as default }
