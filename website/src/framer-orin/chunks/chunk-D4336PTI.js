// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project dfa04aa1c5bdec07 "Jet - SaaS Template (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/B9dVuXKyBYBQH2qzGzSZ/TQzYjvULjd9LBkCG0lLH/b9CO_6Q38.js
import { jsx as _jsx } from 'react/jsx-runtime'
import {
  addPropertyControls,
  ControlType,
  cx,
  motion,
  useSVGTemplate,
  withCSS,
} from 'unframer'
import * as React from 'react'
import { forwardRef as forwardRef2 } from 'react'
var Base = /* @__PURE__ */ forwardRef2(function (props, ref) {
  return /* @__PURE__ */ _jsx('svg', {
    ...props,
    ref,
    children: props.children,
  })
})
var MotionSVG = motion.create(Base)
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
  const { animated, layoutId, children, ...rest } = props
  return animated
    ? /* @__PURE__ */ _jsx(MotionSVG, { ...rest, layoutId, ref, children })
    : /* @__PURE__ */ _jsx('svg', { ...rest, ref, children })
})
var svg =
  '<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 0 0 L 6 0 L 6 5.217 L 1.636 5.217 L 1.636 7.826" display="none" fill="transparent" height="7.826086956521738px" id="LqxDxHa3A" stroke-dasharray="0" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="var(--13bnw74, rgb(255, 255, 255))" transform="translate(9.25 6.5)" width="6px"/><path d="M 0 0 L 0 0" fill="transparent" height="1px" id="EVAAw9TCj" stroke-dasharray="0" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="var(--13bnw74, rgb(255, 255, 255))" transform="translate(12 17.449)" width="1px"/><path d="M 0 2.627 C 0 1.435 0.823 0 3 0 C 5.177 0 6 1.363 6 2.627 C 6 5.608 3 5.391 3 7.179 L 3 8.968" fill="transparent" height="8.968006673375987px" id="bbSERLzg2" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2" stroke="rgb(255, 255, 255)" transform="translate(9 5.5)" width="6px"/></svg>'
var getProps = ({ color, height, id, width, ...props }) => {
  return {
    ...props,
    HN7TZix3o: color ?? props.HN7TZix3o ?? 'rgb(255, 255, 255)',
  }
}
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const { style, className, layoutId, variant, HN7TZix3o, ...restProps } =
    getProps(props)
  const href = useSVGTemplate('247680856', svg)
  return /* @__PURE__ */ _jsx(SVG, {
    ...restProps,
    className: cx('framer-NPeiv', className),
    layoutId,
    ref,
    role: 'presentation',
    style: { '--13bnw74': HN7TZix3o, ...style },
    viewBox: '0 0 24 24',
    children: /* @__PURE__ */ _jsx('use', { href }),
  })
})
var css = ['.framer-NPeiv { aspect-ratio: 1; display: block; width: 24px; }']
var Icon = withCSS(Component, css, 'framer-NPeiv')
Icon.displayName = 'Question'
var stdin_default = Icon
addPropertyControls(Icon, {
  HN7TZix3o: {
    defaultValue: 'rgb(255, 255, 255)',
    hidden: false,
    title: 'Color',
    type: ControlType.Color,
  },
})

export { stdin_default }
