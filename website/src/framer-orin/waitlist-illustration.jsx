// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project dfa04aa1c5bdec07 "Jet - SaaS Template (copy)", do not edit manually */
'use client'

import { Dither } from './chunks/chunk-25LPWLWQ.js'
import { stdin_default as stdin_default2 } from './chunks/chunk-ALVRX4HO.js'
import { stdin_default } from './chunks/chunk-LCDELW7M.js'
import './chunks/chunk-R527CHIA.js'

// virtual:waitlist-illustration
import { Fragment as Fragment2 } from 'react'
import { ContextProviders } from 'unframer'

// /:https://framerusercontent.com/modules/qqh7HlCyFcvfXpEg1YiU/2BELDBGtAOyHkyrfAcOJ/KOK3oJ8Tj.js
import {
  jsx as _jsx2,
  jsxs as _jsxs,
  Fragment as _Fragment,
} from 'react/jsx-runtime'
import {
  addFonts,
  addPropertyControls,
  ChildrenCanSuspend,
  ComponentViewportProvider,
  ControlType,
  cx,
  getFonts,
  PathVariablesContext,
  SmartComponentScopedContainer,
  useComponentViewport,
  useLocaleInfo,
  useQueryData,
  useVariantState,
  withCodeBoundaryForOverrides,
  withCSS,
} from 'unframer'
import { LayoutGroup, motion as motion2, MotionConfigContext } from 'unframer'
import * as React from 'react'
import { useRef as useRef2 } from 'react'

// /:https://framerusercontent.com/modules/aIF8AFrmtrpWiAnIt4ac/A5rVBxusNHWp2lRBdCWu/Flashlight.js
import { jsx as _jsx } from 'react/jsx-runtime'
import { useRef } from 'react'
import { motion, useMotionValue, useMotionTemplate, animate } from 'unframer'
function withSoftMask(Component2) {
  return function SoftMaskWrapper(props) {
    const ref = useRef(null)
    const maskX = useMotionValue(0)
    const maskY = useMotionValue(0)
    const maskSize = useMotionValue(0)
    const maskImage = useMotionTemplate`radial-gradient(circle ${maskSize}px at ${maskX}px ${maskY}px, black, black 40%, transparent 100%)`
    return (
      <motion.div
        ref={ref}
        className={props.className}
        onHoverStart={() => {
          animate(maskSize, 400, {
            duration: 0.3,
            ease: 'easeOut',
          })
        }}
        onHoverEnd={() => {
          animate(maskSize, 0, {
            duration: 0.3,
            ease: 'easeIn',
          })
        }}
        onPointerMove={(e) => {
          if (!ref.current) return
          const { top, left } = ref.current.getBoundingClientRect()
          maskX.set(e.clientX - left)
          maskY.set(e.clientY - top)
        }}
        {...props}
        style={{
          // Inherit original styles...
          ...props.style,
          // ...but force it to be a full-height flex container.
          // This overrides the `height: 1px` from the stylesheet.
          height: '100%',
          display: 'flex',
          // Apply mask styles.
          WebkitMaskImage: maskImage,
          maskImage,
          WebkitMaskComposite: 'destination-out',
          maskComposite: 'destination-out',
        }}
      >
        <Component2
          {...props}
          style={{
            // Inherit its original styles...
            ...props.style,
            // ...but tell it to grow to fill the flex container.
            // This overrides its own `height: 1px` from its class.
            flex: '1 1 0%',
            // For extra safety, explicitly set width and height.
            width: '100%',
            height: '100%',
          }}
        />
      </motion.div>
    )
  }
}

// /:https://framerusercontent.com/modules/qqh7HlCyFcvfXpEg1YiU/2BELDBGtAOyHkyrfAcOJ/KOK3oJ8Tj.js
var DitherFonts = getFonts(Dither)
var MotionDivWithSoftMask1cqxew3 = withCodeBoundaryForOverrides(motion2.div, {
  nodeId: 'mgMQBiYxL',
  override: withSoftMask,
  scopeId: 'KOK3oJ8Tj',
})
var MainSiteGridBorderFonts = getFonts(stdin_default2)
var cycleOrder = ['SX4gBQsPS', 'vlXKowiFW']
var serializationHash = 'framer-BdmiY'
var variantClassNames = {
  SX4gBQsPS: 'framer-v-27t1aq',
  vlXKowiFW: 'framer-v-xqi5g2',
}
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {}
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant]),
  )
  return nextOverrides
}
var transition1 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: 'spring',
}
var toResponsiveImage = (value) => {
  if (
    typeof value === 'object' &&
    value !== null &&
    typeof value.src === 'string'
  ) {
    return value
  }
  return typeof value === 'string'
    ? {
        src: value,
      }
    : void 0
}
var QueryData = ({ query: query2, pageSize, children }) => {
  const data = useQueryData(query2)
  return children(data)
}
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext)
  const transition = value ?? config.transition
  const contextValue = React.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)],
  )
  return (
    <MotionConfigContext.Provider value={contextValue}>
      {children}
    </MotionConfigContext.Provider>
  )
}
var Variants = motion2.create(React.Fragment)
var humanReadableVariantMap = {
  'Social Preview': 'vlXKowiFW',
  Default: 'SX4gBQsPS',
}
var getProps = ({ height, id, width, ...props }) => {
  return {
    ...props,
    variant:
      humanReadableVariantMap[props.variant] ?? props.variant ?? 'SX4gBQsPS',
  }
}
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join('-') + props.layoutDependency
  return variants.join('-')
}
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef2(null)
  const refBinding = ref ?? fallbackRef
  const defaultLayoutId = React.useId()
  const { activeLocale, setLocale } = useLocaleInfo()
  const componentViewport = useComponentViewport()
  const {
    style,
    className,
    layoutId,
    variant,
    SkaQBLm16jxtraO5yv,
    RuahOgRY1jxtraO5yv,
    k2CHhHMepjxtraO5yv,
    idjxtraO5yv,
    ...restProps
  } = getProps(props)
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: 'SX4gBQsPS',
    ref: refBinding,
    variant,
    variantClassNames,
  })
  const layoutDependency = createLayoutDependency(props, variants)
  const sharedStyleClassNames = []
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)
  const isDisplayed = () => {
    if (baseVariant === 'vlXKowiFW') return false
    return true
  }
  const isDisplayed1 = () => {
    if (baseVariant === 'vlXKowiFW') return true
    return false
  }
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition1}>
          <motion2.div
            {...restProps}
            {...gestureHandlers}
            className={cx(
              scopingClassNames,
              'framer-27t1aq',
              className,
              classNames,
            )}
            data-framer-name={'Default'}
            layoutDependency={layoutDependency}
            layoutId={'SX4gBQsPS'}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides(
              {
                vlXKowiFW: {
                  'data-framer-name': 'Social Preview',
                },
              },
              baseVariant,
              gestureVariant,
            )}
          >
            <motion2.div
              className={'framer-o3q06g'}
              data-framer-name={'Customization Frame'}
              layoutDependency={layoutDependency}
              layoutId={'jxtraO5yv'}
            >
              <ChildrenCanSuspend>
                <QueryData
                  query={{
                    from: {
                      alias: 'jxtraO5yv',
                      data: stdin_default,
                      type: 'Collection',
                    },
                    limit: {
                      type: 'LiteralValue',
                      value: 1,
                    },
                    select: [
                      {
                        collection: 'jxtraO5yv',
                        name: 'SkaQBLm16',
                        type: 'Identifier',
                      },
                      {
                        collection: 'jxtraO5yv',
                        name: 'RuahOgRY1',
                        type: 'Identifier',
                      },
                      {
                        collection: 'jxtraO5yv',
                        name: 'k2CHhHMep',
                        type: 'Identifier',
                      },
                      {
                        collection: 'jxtraO5yv',
                        name: 'id',
                        type: 'Identifier',
                      },
                    ],
                  }}
                >
                  {(collection, paginationInfo, loadMore) => (
                    <_Fragment>
                      {collection?.map(
                        (
                          {
                            id: idjxtraO5yv2,
                            k2CHhHMep: k2CHhHMepjxtraO5yv2,
                            RuahOgRY1: RuahOgRY1jxtraO5yv2,
                            SkaQBLm16: SkaQBLm16jxtraO5yv2,
                          },
                          index,
                        ) => {
                          RuahOgRY1jxtraO5yv2 ??= '#09F'
                          k2CHhHMepjxtraO5yv2 ??= ''
                          return (
                            <LayoutGroup id={`jxtraO5yv-${idjxtraO5yv2}`}>
                              <PathVariablesContext.Provider
                                value={{
                                  k2CHhHMep: k2CHhHMepjxtraO5yv2,
                                }}
                              >
                                <motion2.div
                                  className={'framer-1vwlly7'}
                                  data-framer-name={'Content'}
                                  layoutDependency={layoutDependency}
                                  layoutId={'MiGLNDEfG'}
                                >
                                  <motion2.div
                                    className={'framer-wcov21'}
                                    data-framer-name={'Art Wrap Base'}
                                    layoutDependency={layoutDependency}
                                    layoutId={'zpcEgKY5z'}
                                    style={{
                                      mask: "url('https://framerusercontent.com/images/5B7inlPyLnwEfn6NgCSFW6I5bE.svg') alpha no-repeat center / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.25) 100%) add",
                                      opacity: 0.7,
                                      WebkitMask:
                                        "url('https://framerusercontent.com/images/5B7inlPyLnwEfn6NgCSFW6I5bE.svg') alpha no-repeat center / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.25) 100%) add",
                                    }}
                                  >
                                    <ComponentViewportProvider>
                                      <SmartComponentScopedContainer
                                        className={'framer-w3b9om-container'}
                                        isAuthoredByUser={true}
                                        isModuleExternal={true}
                                        layoutDependency={layoutDependency}
                                        layoutId={'c_YyQwZ4C-container'}
                                        nodeId={'c_YyQwZ4C'}
                                        rendersWithMotion={true}
                                        scopeId={'KOK3oJ8Tj'}
                                      >
                                        <Dither
                                          algorithm={'ordered'}
                                          animation={{
                                            canvasPreview: true,
                                            enabled: false,
                                            intensity: 10,
                                            interval: 0.1,
                                          }}
                                          backgroundColor={
                                            'var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))'
                                          }
                                          brightness={-10}
                                          dotColor={
                                            'var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))'
                                          }
                                          enabled={true}
                                          glow={0}
                                          height={'100%'}
                                          id={'c_YyQwZ4C'}
                                          image={toResponsiveImage(
                                            SkaQBLm16jxtraO5yv2,
                                          )}
                                          layoutId={'c_YyQwZ4C'}
                                          midtones={50}
                                          pixelSize={1}
                                          radius={'0px'}
                                          style={{
                                            height: '100%',
                                            width: '100%',
                                          }}
                                          threshold={125}
                                          width={'100%'}
                                        />
                                      </SmartComponentScopedContainer>
                                    </ComponentViewportProvider>
                                  </motion2.div>
                                  {isDisplayed() && (
                                    <MotionDivWithSoftMask1cqxew3
                                      className={'framer-1cqxew3'}
                                      data-framer-name={'Flashlight Wrap'}
                                      layoutDependency={layoutDependency}
                                      layoutId={'mgMQBiYxL'}
                                    >
                                      <motion2.div
                                        className={'framer-17vyzju'}
                                        data-framer-name={'Art Wrap Highlight'}
                                        layoutDependency={layoutDependency}
                                        layoutId={'dvKJ1O3PD'}
                                        style={{
                                          mask: "url('https://framerusercontent.com/images/5B7inlPyLnwEfn6NgCSFW6I5bE.svg') alpha no-repeat center / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.25) 100%) add",
                                          WebkitMask:
                                            "url('https://framerusercontent.com/images/5B7inlPyLnwEfn6NgCSFW6I5bE.svg') alpha no-repeat center / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.25) 100%) add",
                                        }}
                                      >
                                        <ComponentViewportProvider>
                                          <SmartComponentScopedContainer
                                            className={
                                              'framer-1qg483b-container'
                                            }
                                            isAuthoredByUser={true}
                                            isModuleExternal={true}
                                            layoutDependency={layoutDependency}
                                            layoutId={'qnrIsB3jy-container'}
                                            nodeId={'qnrIsB3jy'}
                                            rendersWithMotion={true}
                                            scopeId={'KOK3oJ8Tj'}
                                          >
                                            <Dither
                                              algorithm={'random'}
                                              animation={{
                                                canvasPreview: false,
                                                enabled: true,
                                                intensity: 100,
                                                interval: 0.08,
                                              }}
                                              backgroundColor={
                                                'var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))'
                                              }
                                              brightness={50}
                                              dotColor={RuahOgRY1jxtraO5yv2}
                                              enabled={true}
                                              glow={0}
                                              height={'100%'}
                                              id={'qnrIsB3jy'}
                                              image={toResponsiveImage(
                                                SkaQBLm16jxtraO5yv2,
                                              )}
                                              layoutId={'qnrIsB3jy'}
                                              midtones={65}
                                              pixelSize={1}
                                              radius={'0px'}
                                              style={{
                                                height: '100%',
                                                width: '100%',
                                              }}
                                              threshold={55}
                                              width={'100%'}
                                            />
                                          </SmartComponentScopedContainer>
                                        </ComponentViewportProvider>
                                      </motion2.div>
                                    </MotionDivWithSoftMask1cqxew3>
                                  )}
                                  {isDisplayed1() && (
                                    <motion2.div
                                      className={'framer-1jww0me'}
                                      data-framer-name={
                                        'Flashlight Wrap (Social Preview)'
                                      }
                                      layoutDependency={layoutDependency}
                                      layoutId={'tnQYzTJqe'}
                                      style={{
                                        mask: 'radial-gradient(41% 431.57894736842104% at 50% 0%, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%) add',
                                        WebkitMask:
                                          'radial-gradient(41% 431.57894736842104% at 50% 0%, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%) add',
                                      }}
                                    >
                                      <motion2.div
                                        className={'framer-1iowdxw'}
                                        data-framer-name={'Art Wrap Highlight'}
                                        layoutDependency={layoutDependency}
                                        layoutId={'oM7yidTWW'}
                                        style={{
                                          mask: "url('https://framerusercontent.com/images/5B7inlPyLnwEfn6NgCSFW6I5bE.svg') alpha no-repeat center / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.25) 100%) add",
                                          WebkitMask:
                                            "url('https://framerusercontent.com/images/5B7inlPyLnwEfn6NgCSFW6I5bE.svg') alpha no-repeat center / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0.25) 100%) add",
                                        }}
                                      >
                                        <ComponentViewportProvider>
                                          <SmartComponentScopedContainer
                                            className={
                                              'framer-1t6pz8n-container'
                                            }
                                            isAuthoredByUser={true}
                                            isModuleExternal={true}
                                            layoutDependency={layoutDependency}
                                            layoutId={'idONJxYWB-container'}
                                            nodeId={'idONJxYWB'}
                                            rendersWithMotion={true}
                                            scopeId={'KOK3oJ8Tj'}
                                          >
                                            <Dither
                                              algorithm={'random'}
                                              animation={{
                                                canvasPreview: false,
                                                enabled: false,
                                                intensity: 100,
                                                interval: 0.08,
                                              }}
                                              backgroundColor={
                                                'var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))'
                                              }
                                              brightness={50}
                                              dotColor={RuahOgRY1jxtraO5yv2}
                                              enabled={true}
                                              glow={0}
                                              height={'100%'}
                                              id={'idONJxYWB'}
                                              image={toResponsiveImage(
                                                SkaQBLm16jxtraO5yv2,
                                              )}
                                              layoutId={'idONJxYWB'}
                                              midtones={65}
                                              pixelSize={1}
                                              radius={'0px'}
                                              style={{
                                                height: '100%',
                                                width: '100%',
                                              }}
                                              threshold={55}
                                              width={'100%'}
                                            />
                                          </SmartComponentScopedContainer>
                                        </ComponentViewportProvider>
                                      </motion2.div>
                                    </motion2.div>
                                  )}
                                </motion2.div>
                              </PathVariablesContext.Provider>
                            </LayoutGroup>
                          )
                        },
                      )}
                    </_Fragment>
                  )}
                </QueryData>
              </ChildrenCanSuspend>
            </motion2.div>
            <ComponentViewportProvider
              height={(componentViewport?.height || 345) - 0}
              width={componentViewport?.width || '100vw'}
              y={(componentViewport?.y || 0) + 0}
            >
              <SmartComponentScopedContainer
                className={'framer-1t3ekpe-container'}
                layoutDependency={layoutDependency}
                layoutId={'cGJfAUoIk-container'}
                nodeId={'cGJfAUoIk'}
                rendersWithMotion={true}
                scopeId={'KOK3oJ8Tj'}
              >
                {_jsx2(stdin_default2, {
                  height: '100%',
                  id: 'cGJfAUoIk',
                  layoutId: 'cGJfAUoIk',
                  style: {
                    height: '100%',
                    width: '100%',
                  },
                  variant: 'yzIFdYlxZ',
                  width: '100%',
                })}
              </SmartComponentScopedContainer>
            </ComponentViewportProvider>
          </motion2.div>
        </Transition>
      </Variants>
    </LayoutGroup>
  )
})
var css = [
  '@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }',
  '.framer-BdmiY.framer-1czam6s, .framer-BdmiY .framer-1czam6s { display: block; }',
  '.framer-BdmiY.framer-27t1aq { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 34px; height: 345px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 1168px; }',
  '.framer-BdmiY .framer-o3q06g { align-content: flex-start; align-items: flex-start; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 20px; height: 1px; justify-content: center; padding: 0px; position: relative; width: 100%; }',
  '.framer-BdmiY .framer-1vwlly7 { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 1px; justify-content: flex-start; padding: 0px; position: relative; width: 100%; }',
  '.framer-BdmiY .framer-wcov21 { bottom: 0px; flex: none; left: 0px; overflow: hidden; position: absolute; right: 0px; top: 0px; z-index: 1; }',
  '.framer-BdmiY .framer-w3b9om-container, .framer-BdmiY .framer-1qg483b-container, .framer-BdmiY .framer-1t6pz8n-container { bottom: 0px; flex: none; left: 0px; position: absolute; right: 0px; top: 0px; z-index: 1; }',
  '.framer-BdmiY .framer-1cqxew3, .framer-BdmiY .framer-1jww0me { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: 100%; justify-content: center; overflow: hidden; padding: 0px; pointer-events: auto; position: relative; width: 1px; z-index: 3; }',
  '.framer-BdmiY .framer-17vyzju, .framer-BdmiY .framer-1iowdxw { flex: 1 0 0px; height: 100%; overflow: hidden; position: relative; width: 1px; z-index: 5; }',
  '.framer-BdmiY .framer-1t3ekpe-container { -webkit-user-select: none; bottom: 0px; flex: none; left: 0px; pointer-events: none; position: absolute; right: 0px; top: 0px; user-select: none; z-index: 2; }',
]
var FramerKOK3oJ8Tj = withCSS(Component, css, 'framer-BdmiY')
var stdin_default3 = FramerKOK3oJ8Tj
FramerKOK3oJ8Tj.displayName = 'Waitlist Illustration'
FramerKOK3oJ8Tj.defaultProps = {
  height: 345,
  width: 1168,
}
addPropertyControls(FramerKOK3oJ8Tj, {
  variant: {
    options: ['SX4gBQsPS', 'vlXKowiFW'],
    optionTitles: ['Default', 'Social Preview'],
    title: 'Variant',
    type: ControlType.Enum,
  },
})
addFonts(
  FramerKOK3oJ8Tj,
  [
    {
      explicitInter: true,
      fonts: [],
    },
    ...DitherFonts,
    ...MainSiteGridBorderFonts,
  ],
  {
    supportsExplicitInterCodegen: true,
  },
)

// virtual:waitlist-illustration
import { WithFramerBreakpoints } from 'unframer'
import { jsx } from 'react/jsx-runtime'
var locales = []
var defaultResponsiveVariants = {
  base: 'SX4gBQsPS',
}
stdin_default3.Responsive = ({ locale, ...rest }) => {
  return (
    <ContextProviders
      routes={{
        Agq1L2jDe: {
          path: '/careers/:slug',
        },
        J_r8CT7G7: {
          path: '/about',
        },
        SOf0RbDE_: {
          path: '/blog',
        },
        TQDjkQC2A: {
          path: '/contact',
        },
        YBTUYW5mq: {
          path: '/pricing',
        },
        a5CCfdDiy: {
          path: '/updates/:slug',
        },
        augiA20Il: {
          path: '/',
        },
        cpP7I9WGp: {
          path: '/404',
        },
        e9YIc4Uv5: {
          path: '/waitlist',
        },
        inNalAASs: {
          path: '/blog/:slug',
        },
        ixIXvnG3U: {
          path: '/legal/:slug',
        },
        rX7FOhQc0: {
          path: '/updates',
        },
        so5jTiDIE: {
          path: '/careers',
        },
      }}
      framerSiteId={
        'dfa04aa1c5bdec07246cce5cf5bdd608b64f5245b2256932daafbe1cb51c98be'
      }
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default3}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </ContextProviders>
  )
}
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <ContextProviders
      routes={{
        Agq1L2jDe: {
          path: '/careers/:slug',
        },
        J_r8CT7G7: {
          path: '/about',
        },
        SOf0RbDE_: {
          path: '/blog',
        },
        TQDjkQC2A: {
          path: '/contact',
        },
        YBTUYW5mq: {
          path: '/pricing',
        },
        a5CCfdDiy: {
          path: '/updates/:slug',
        },
        augiA20Il: {
          path: '/',
        },
        cpP7I9WGp: {
          path: '/404',
        },
        e9YIc4Uv5: {
          path: '/waitlist',
        },
        inNalAASs: {
          path: '/blog/:slug',
        },
        ixIXvnG3U: {
          path: '/legal/:slug',
        },
        rX7FOhQc0: {
          path: '/updates',
        },
        so5jTiDIE: {
          path: '/careers',
        },
      }}
      framerSiteId={
        'dfa04aa1c5bdec07246cce5cf5bdd608b64f5245b2256932daafbe1cb51c98be'
      }
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default3, {
        ...rest,
      })}
    </ContextProviders>
  )
}
Object.assign(ComponentWithRoot, stdin_default3)
export { ComponentWithRoot as default }
